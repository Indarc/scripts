#!/usr/bin/env python3

import argparse
import hashlib

parser = argparse.ArgumentParser(description="Identify hash and decrypt it")
parser.add_argument("hash", type=str, help="Your hash in string mode")

HASHS = {
        "md5": {
            "lenght": 32
            },
        "sha-1": {
            "lenght": 40
            },
        "sha-256": {
            "lenght": 64
            },
        "sha-512": {
            "lenght": 128
            },
        "ntlm": {
            "lenght": 32
            },
        "bcrypt": {
            "lenght": 60
            }
        }


def main():
    args = parser.parse_args()

    HASH = args.hash
    HASHTYPE = None
    
    print(f"Start decrypting {HASH}")

    hash_lenght = len(HASH)
    for key, body in HASHS.items():
        if body.get("lenght") == hash_lenght:
            HASHTYPE = key
            break

    enc = hashlib.new(HASHTYPE)
    for i in range(0, 999999999999):
        enc.update(bf"{i}")
        tmp = enc.hexdigest()
        if HASH == tmp:
            print("Success: ")
            print(i, " : ", HASH)
            return

    print("Decrypting failed")


if __name__ == "__main__":
    main()
